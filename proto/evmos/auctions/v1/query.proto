// Copyright Tharsis Labs Ltd.(Evmos)
// SPDX-License-Identifier:ENCL-1.0(https://github.com/evmos/evmos/blob/main/LICENSE)
syntax = "proto3";
package evmos.auctions.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "evmos/auctions/v1/genesis.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/evmos/evmos/v18/x/auctions/types";

service Query {
  rpc AuctionInfo(QueryCurrentAuctionInfoRequest) returns (QueryCurrentAuctionInfoResponse) {
    option (google.api.http).get = "/evmos/auctions/v1/auction_info";
  }
  // Params retrieves the erc20 module params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/evmos/auctions/v1/params";
  }
}

message QueryParamsRequest {}

message QueryParamsResponse {
  // params defines all the paramaters of the module
  Params params = 1;
}

message QueryCurrentAuctionInfoRequest {}

message QueryCurrentAuctionInfoResponse {
  // amount describes the amount put on auction
  repeated cosmos.base.v1beta1.Coin tokens = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  // current_round describes the current round of the auction
  uint64 current_round = 2;
  // highest_bid describes the highest bid in the current round
  cosmos.base.v1beta1.Coin highest_bid = 3 [
    (gogoproto.nullable) = false
  ];
  // bidder_address describes the address of the highest bidder
  string bidder_address = 4;
}