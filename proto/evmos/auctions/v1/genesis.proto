// Copyright Tharsis Labs Ltd.(Evmos)
// SPDX-License-Identifier:ENCL-1.0(https://github.com/evmos/evmos/blob/main/LICENSE)
syntax = "proto3";
package evmos.auctions.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/evmos/evmos/v18/x/auctions/types";

// GenesisState defines the inflation module's genesis state.
message GenesisState {
  // params defines all the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];

  // auction_epoch is the auction epoch
  EpochInfo auction_epoch = 2 [(gogoproto.nullable) = false];
}

// EpochInfo defines the message interface containing the relevant info about an epoch.
message EpochInfo {
  // identifier of the epoch
  string identifier = 1;
  // start_time of the epoch
  google.protobuf.Timestamp start_time = 2
  [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"start_time\""];
  // duration of the epoch
  google.protobuf.Duration duration = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration,omitempty",
    (gogoproto.moretags) = "yaml:\"duration\""
  ];
  // current_epoch is the integer identifier of the epoch
  int64 current_epoch = 4;
  // current_epoch_start_time defines the timestamp of the start of the epoch
  google.protobuf.Timestamp current_epoch_start_time = 5 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"current_epoch_start_time\""
  ];
  // epoch_counting_started reflects if the counting for the epoch has started
  bool epoch_counting_started = 6;
  // current_epoch_start_height of the epoch
  int64 current_epoch_start_height = 7;
}


// Params holds parameters for the inflation module.
message Params {
  // enable_auction is a boolean that defines if the auction module is enabled
  bool enable_auction = 1;
}
